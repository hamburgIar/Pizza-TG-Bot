import asyncio

import src.handlers as hd

from database.db_handler import get_user_invite_num, get_users_count
from scripts.config import (
    phone_number,
    address,
    opening_hours,
    admins,
    invite_num
)

from aiogram.enums import ChatMemberStatus
from aiogram.utils.payload import decode_payload
from aiogram.utils.deep_linking import create_start_link


async def send_notify(call_id, text, show_alert):
    await hd.bot.answer_callback_query(call_id, show_alert=show_alert, text=text)


async def send_message_with_delay(user_id, message, delay):
    await hd.bot.send_message(user_id, message)
    await asyncio.sleep(delay)


async def send_message_with_delay_markup(user_id, message, markup, delay):
    await hd.bot.send_message(user_id, message, reply_markup=markup)
    await asyncio.sleep(delay)


async def send_animation_with_delay(user_id, animation, delay):
    await hd.bot.send_animation(user_id, animation)
    await asyncio.sleep(delay)


async def check_chat_member(chat_id, user_id):
    user_channel_status = await hd.bot.get_chat_member(chat_id=chat_id, user_id=user_id)
    return True if user_channel_status.status != ChatMemberStatus.LEFT else False


async def hello_text(message):
    return f"<b>‚≠êÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–æ—á–∫—É –≤–∫—É—Å–∞, <code>{message.from_user.full_name}</code>!</b>" if message.from_user.full_name else "<b>‚≠êÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–æ—á–∫—É –≤–∫—É—Å–∞!</b>"


async def get_referrer(command):
    try:
        decoded = decode_payload(command.args)
    except:
        decoded = 0
    return decoded


async def profile_text(referrer_username, user_prizes_num, user_invite_num):
    user_referrer_text = "" if referrer_username == 0 else f"ü§ù –ü—Ä–∏–≥–ª–∞—Å–∏–ª(–∞): <code>@{referrer_username}</code>\n\n"
    return f"<b>{user_referrer_text}üéÅ –ü–æ–¥–∞—Ä–∫–æ–≤ –æ—Ç–∫—Ä—ã—Ç–æ: <code>{user_prizes_num}</code>\nüë• –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: <code>{user_invite_num}</code></b>"


async def info_text():
    opening_hours_text = ""
    if len(set(opening_hours.values())) == 1:
        opening_hours_text = f"–° –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞ –ø–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ: {list(opening_hours.values())[0]}"
    else:
        for key, value in opening_hours.items():
            opening_hours_text += f"<i>{key}: {value}</i>\n"
    return f"<b>‚òéÔ∏è –¢–µ–ª–µ—Ñ–æ–Ω: <code>{phone_number}</code>\n\nüè† –ê–¥—Ä–µ—Å: <i>{address}</i>\n\n–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã:\n\n{opening_hours_text}</b>"


async def referral_program_text(user_id):
    user_link = await create_start_link(hd.bot, str(user_id), encode=True)
    user_invite_num, = await get_user_invite_num(user_id)
    return f"<b>üéâ –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –ø–æ–¥–∞—Ä–∫–∏!\n\nüéÅ –ó–∞ –∫–∞–∂–¥—ã–µ {invite_num} –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–¥–∞—Ä–æ—á–Ω—É—é –∫–æ—Ä–æ–±–∫—É —Å —Å—é—Ä–ø—Ä–∏–∑–æ–º!\n\nüîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: <code>{user_link}</code>\n\nüë• –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: <i>{user_invite_num} –¥—Ä—É–∑–µ–π</i>\nüéÅ –î–æ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–¥–∞—Ä–æ—á–Ω–æ–π –∫–æ—Ä–æ–±–∫–∏ –æ—Å—Ç–∞–ª–æ—Å—å –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å {invite_num - int(user_invite_num)} –¥—Ä—É–∑–µ–π\n\nüëâüèª –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–µ–π —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –µ—â–µ –±–æ–ª—å—à–µ –ø–æ–¥–∞—Ä–∫–æ–≤!</b>"


async def referral_user_text(referrer_username, user_username, referrer_invite_num):
    return f"<b>üöÄ <code>{referrer_username}</code>, –æ—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!\n\n<code>{user_username}</code> —Å—Ç–∞–ª —Ç–≤–æ–∏–º —Ä–µ—Ñ–µ—Ä–∞–ª–æ–º. –¢—ã –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ –ø–æ–ª—É—á–µ–Ω–∏—é –±–æ–Ω—É—Å–∞! üòâ\n\nüéÅ –î–æ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–¥–∞—Ä–æ—á–Ω–æ–π –∫–æ—Ä–æ–±–∫–∏ –æ—Å—Ç–∞–ª–æ—Å—å –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å {invite_num - int(referrer_invite_num)} –¥—Ä—É–∑–µ–π</b>"


async def admin_text():
    return f"<b>üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <code>{await get_users_count()}</code>\nüßë‚Äçüíª –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: <code>{len(admins)}</code></b>"


async def find_user_text(user_id, username, referrer, user_prizes_num, user_invite_num, user_ban_status):
    user_referrer_text = "" if referrer == 0 else f"ü§ù –ü—Ä–∏–≥–ª–∞—Å–∏–ª(–∞): <code>@{referrer}</code>\n"
    ban_text = "‚õì –ó–∞–±–∞–Ω–µ–Ω\n\n" if user_ban_status else ""
    return f"<b>üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ <code>@{username}</code>\n\n{user_referrer_text}{ban_text}üÜî ID: <code>{user_id}</code>\nüéÅ –ü–æ–¥–∞—Ä–∫–æ–≤ –æ—Ç–∫—Ä—ã—Ç–æ: <code>{user_prizes_num}</code>\nüë• –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: <code>{user_invite_num}</code></b>"
